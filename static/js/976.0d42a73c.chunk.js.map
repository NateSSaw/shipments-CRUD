{"version":3,"file":"static/js/976.0d42a73c.chunk.js","mappings":"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","sources":["redux/shipments/selectors.js","webpack://react/./src/components/LoadMoreBtn/LoadMoreBtn.module.css?7c53","components/LoadMoreBtn/LoadMoreBtn.jsx","webpack://react/./src/components/Spinner/Spiner.module.css?5b0a","components/Spinner/Spinner.jsx","components/ArrowDown/ArrowDown.jsx","components/ArrowUp/ArrowUp.jsx","components/TableHeader/TableHeader.jsx","webpack://react/./src/components/TableRow/TableRow.module.css?d46f","redux/sort/selectors.js","components/TableRow/TableRow.jsx","webpack://react/./src/components/ShipmentsTable/ShipmentsTable.module.css?16a2","components/ShipmentsTable/ShipmentsTable.jsx","pages/Shipments/Shipments.jsx"],"sourcesContent":["export const getShipmentsList = state => state.shipments.shipmentsList;\nexport const getIsLoading = state => state.shipments.isLoading;","// extracted by mini-css-extract-plugin\nexport default {\"load\":\"LoadMoreBtn_load__izGLg\",\"center\":\"LoadMoreBtn_center__5Yoyo\"};","import { useSelector } from 'react-redux';\nimport { getShipmentsList } from 'redux/shipments/selectors';\nimport css from './LoadMoreBtn.module.css'\nimport PropTypes from 'prop-types'\n\nexport const LoadMoreBtn = ({ page, onNextPage, onPrevPage }) => {\n\n    const shipments = useSelector(getShipmentsList);\n\n    return <div className={css.center}>\n        {page > 1 && <button className={css.load} type=\"button\" onClick={onPrevPage}>Prev Page</button>}\n      {shipments?.length > 0 && page<10 && <button className={css.load} type=\"button\" onClick={onNextPage}>Next Page</button>}\n      </div>;\n};\n  \nLoadMoreBtn.propTypes = {\n    page: PropTypes.number.isRequired,\n    onNextPage: PropTypes.func.isRequired,\n    onPrevPage: PropTypes.func.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Spiner_spinner__noRo0\",\"rotation\":\"Spiner_rotation__36X5Z\",\"wrapper\":\"Spiner_wrapper__CjprP\"};","import css from \"./Spiner.module.css\"\nexport default function Spinner() {\n  return (\n      <div className={css.wrapper}>\n          <i className={css.spinner}></i>\n    </div>\n  );\n}","export default function ArrowDown() {\n    return (\n        <button className=\"svg\"><svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"12\"\n            fill=\"grey\"\n            className=\"bi bi-arrow-down\"\n            viewBox=\"0 0 16 16\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z\"\n            />\n        </svg></button>\n    \n  );\n}\n","export default function ArrowUp() {\n    return (<button className=\"svg\"><svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"12\"\n        height=\"12\"\n        fill=\"grey\"\n        className=\"bi bi-arrow-up\"\n        viewBox=\"0 0 16 16\"\n\n    >\n        <path\n            fillRule=\"evenodd\"\n            d=\"M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z\"\n        />\n    </svg></button>\n    \n  );\n}\n","import { useState } from 'react';\nimport './TableHeader.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getShipmentsList } from 'redux/shipments/selectors';\nimport { sortShipmentsData } from 'redux/sort/slice';\nimport ArrowDown from 'components/ArrowDown/ArrowDown';\nimport ArrowUp from 'components/ArrowUp/ArrowUp';\nexport const TableHeader = () => {\n    const [directionSort, setDirectionSort] = useState(true);\n    const shipmnetsData = useSelector(getShipmentsList);\n    const dispatch = useDispatch();\n\n    const sortData = field => {\n        const sortedData = [...shipmnetsData];\n        if (directionSort) {\n            if (typeof field === 'number') {\n                sortedData.sort((a, b) => {\n                    return a[field] - b[field];\n                });\n            } else if (typeof field === 'string') {\n                sortedData.sort((a, b) => {\n                    return a[field].localeCompare(b[field]);\n                });\n            }\n        } else {\n            if (typeof field === 'number') {\n                sortedData.sort((a, b) => {\n                    return b[field] - a[field];\n                });\n            } else if (typeof field === 'string') {\n                sortedData.sort((a, b) => {\n                    return b[field].localeCompare(a[field]);\n                });\n            }\n        }\n        dispatch(sortShipmentsData(sortedData));\n        setDirectionSort(prevState => !prevState);\n        \n    };\n\n    return (\n        <thead>\n            <tr>\n                <th>ORDERNO</th>\n                <th>DELIVERYDATE</th>\n                <th\n                    onClick={() => {\n                        sortData('customer');\n                    }}\n                ><span>\n                    CUSTOMER</span>\n                    <ArrowUp\n                                             onClick={() => {\n                            sortData('customer');\n                        }}\n                    />\n                    <ArrowDown\n                        onClick={() => {\n                            sortData('customer');\n                        }}\n                    />\n                </th>\n                <th\n                    onClick={() => {\n                        sortData('trackingNo');\n                    }}\n                ><span>\n                    TRACKINGNO</span>\n                    <ArrowUp\n                        onClick={() => {\n                            sortData('trackingNo');\n                        }}\n                    />\n                    <ArrowDown\n                        onClick={() => {\n                            sortData('trackingNo');\n                        }}\n                    />\n                </th>\n                <th\n                    onClick={() => {\n                        sortData('status');\n                    }}\n                ><span>\n                    STATUS</span>\n                    <ArrowUp\n                        onClick={() => {\n                            sortData('status');\n                        }}\n                    />\n                    <ArrowDown\n                        onClick={() => {\n                            sortData('status');\n                        }}\n                    />\n                </th>\n                <th onClick={() => {\n                    sortData('consignee');\n                }} colSpan=\"2\">\n                    <span>\n                    CONSIGNEE</span>\n                    <ArrowUp\n                       \n                        onClick={() => {\n                            sortData('consignee');\n                        }}\n                    />\n                    <ArrowDown\n                        onClick={() => {\n                            sortData('consignee');\n                        }}\n                    />\n                </th>\n            </tr>\n        </thead>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"body\":\"TableRow_body__thw+O\",\"container__btn\":\"TableRow_container__btn__kUQav\",\"edit\":\"TableRow_edit__ofjjv\",\"delete\":\"TableRow_delete__+PYLI\"};","export const getSortedShipments = state => state.sortShipments.sortedList;","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { deleteShipment } from 'redux/shipments/operations';\nimport css from './TableRow.module.css';\nimport { getSortedShipments } from 'redux/sort/selectors';\nimport { getShipmentsList } from 'redux/shipments/selectors';\n\nexport const TableRow = () => {\n  const shipments = useSelector(getShipmentsList);\n  const sortedShipmentsData = useSelector(getSortedShipments);\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteShipment(id));\n  };\nconst data = sortedShipmentsData.length >0 ? sortedShipmentsData : shipments\n   \n  return (\n    <tbody className={css.body}>\n      {data?.map(\n        ({ id, date, customer, trackingNo, status, consignee }) => {\n          return (\n            <tr key={id}>\n              <td>{id}</td>\n              <td>{date}</td>\n              <td>{customer}</td>\n              <td>{trackingNo}</td>\n              <td>{status}</td>\n              <td>{consignee}</td>\n              <td>\n                <div className={css.container__btn}>\n                  <Link className={css.edit} to={`/shipments/${id}`}></Link>\n\n                  <button\n                    type=\"button\"\n                    className={css.delete}\n                    onClick={() => handleDelete(id)}\n                  ></button>\n                </div>\n              </td>\n            </tr>\n          );\n        }\n      )}\n    </tbody>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ShipmentsTable_container__oWFXY\",\"table\":\"ShipmentsTable_table__oCm59\"};","import { LoadMoreBtn } from \"components/LoadMoreBtn/LoadMoreBtn\";\nimport Spinner from \"components/Spinner/Spinner\";\nimport { TableHeader } from \"components/TableHeader/TableHeader\";\nimport { TableRow } from \"components/TableRow/TableRow\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllShipments } from \"redux/shipments/operations\";\nimport { getIsLoading } from \"redux/shipments/selectors\";\nimport css from './ShipmentsTable.module.css'\nimport { sortShipmentsData } from \"redux/sort/slice\";\n\nexport default function ShipmentsTable() {\n    const [page, setPage] = useState(1);\n     const dispatch = useDispatch();\n    const isLoading = useSelector(getIsLoading);\n\n    useEffect(() => {\n        dispatch(getAllShipments(page));\n        dispatch(sortShipmentsData([]));\n        \n}, [dispatch, page]);\n\n    const onNextPage = () => {\n        setPage(prev=>prev+1)\n    }\n\n    const onPrevPage = () => {\n        setPage(prev=>prev-1)\n    }\n\n    return (\n        <>\n        <div className={css.container}>\n        <table className={css.table}>\n        <TableHeader />\n        <TableRow  />\n        </table></div>\n        {isLoading && <Spinner/>}\n        {!isLoading && <LoadMoreBtn  page={page} onNextPage={onNextPage} onPrevPage={onPrevPage}/>}\n        </>)\n    \n}\n","import ShipmentsTable from \"components/ShipmentsTable/ShipmentsTable\";\n\n\nexport default function Shipments() {\n  return (\n    <>\n      <ShipmentsTable />\n    </>\n  );\n}"],"names":["getShipmentsList","state","shipments","shipmentsList","getIsLoading","isLoading","LoadMoreBtn","page","onNextPage","onPrevPage","useSelector","className","css","type","onClick","length","Spinner","ArrowDown","xmlns","width","height","fill","viewBox","fillRule","d","ArrowUp","TableHeader","useState","directionSort","setDirectionSort","shipmnetsData","dispatch","useDispatch","sortData","field","sortedData","sort","a","b","localeCompare","sortShipmentsData","prevState","colSpan","getSortedShipments","sortShipments","sortedList","TableRow","sortedShipmentsData","data","map","id","date","customer","trackingNo","status","consignee","to","deleteShipment","handleDelete","ShipmentsTable","setPage","useEffect","getAllShipments","prev","Shipments"],"sourceRoot":""}