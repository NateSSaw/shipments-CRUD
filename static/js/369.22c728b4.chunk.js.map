{"version":3,"file":"static/js/369.22c728b4.chunk.js","mappings":"uPAEMA,EAAe,mCAAG,WAAMC,GAAN,kGAEGC,EAAAA,EAAAA,IAAA,qBAAwBD,IAF3B,uBAEZE,EAFY,EAEZA,KAFY,kBAGbA,GAHa,gCAKpBC,QAAQC,IAAI,KAAMC,SALE,yDAAH,sDASrB,I,mBCJe,SAASC,IACpB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACF,GAA0CF,EAAAA,EAAAA,WAAS,GAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACSX,GAAMY,EAAAA,EAAAA,MAANZ,GAEDa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACNlB,EAAgBC,GAAIkB,MAAK,SAAAhB,GACjBA,EACAO,EAAYP,IAEZO,EAAY,IACZM,EAAS,aAEhB,GACP,GAAE,CAACf,EAAIe,IAGT,IAAMI,EAAiB,mCAAG,WAAOC,GAAP,gFACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACVf,EAASc,KAAUC,EAFC,gCAGjBd,GAAY,SAAAe,GAAQ,yBACtBA,GADsB,cAEtBF,EAAOC,GAFe,IAHH,OAOtBpB,QAAQC,IAAKI,GACbG,GAAiB,GARK,2CAAH,sDAYbc,EAAQ,mCAAG,WAAOL,GAAP,wEACbA,EAAEM,iBADW,SAEPb,GAASc,EAAAA,EAAAA,IAAmBnB,EAASR,GAAIQ,IAFlC,OAGbG,GAAiB,GAHJ,2CAAH,sDAUhB,OACC,+BACC,kBAAMc,SAAUA,EAAhB,WACI,8CACE,kBAAOG,QAAQ,KAAf,wBACA,kBACEC,KAAK,OACL7B,GAAG,KACH8B,UAAQ,EACRR,KAAK,KACLC,MAAOf,EAASR,IAAM,MAExB,kBAAO4B,QAAQ,WAAf,wBACA,kBACEC,KAAK,OACL7B,GAAG,WACHsB,KAAK,WACLC,MAAOf,EAASuB,UAAY,GAC5BC,SAAUb,KAEZ,kBAAOS,QAAQ,aAAf,2BACA,kBACEC,KAAK,OACL7B,GAAG,aACHsB,KAAK,aACLC,MAAOf,EAASyB,YAAc,GAC9BD,SAAUb,KAEZ,kBAAOS,QAAQ,YAAf,yBACA,kBACEC,KAAK,OACL7B,GAAG,YACHsB,KAAK,YACLC,MAAOf,EAAS0B,WAAa,GAC7BF,SAAUb,KAEZ,kBAAOS,QAAQ,SAAf,sBACA,kBACEC,KAAK,OACL7B,GAAG,SACHsB,KAAK,SACLC,MAAOf,EAAS2B,QAAU,GAC1BH,SAAUb,KAEd,mBAAQU,KAAK,SAASC,UAAWpB,EAAjC,wBAGP,C","sources":["services/getShipment.js","pages/ShipmentPage/ShipmentPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getShipmentByNo = async id => {\n  try {\n    const { data } = await axios.get(`/shipments/${id}`);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport default getShipmentByNo;","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport getShipmentByNo from 'services/getShipment';\nimport { useState } from 'react';\nimport { changeShipmentData } from 'redux/shipments/operations';\n\nexport default function ShipmentPage() {\n    const [formData, setFormData] = useState('');\n  const [isFormChanged, setIsFormChanged] = useState(false);\n    const {id }= useParams();\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    useEffect(() => {\n        getShipmentByNo(id).then(data => {\n            if (data) {\n                setFormData(data);\n            } else {\n                setFormData('');\n                navigate('/notFound');\n            }\n        })\n }, [id, navigate]);\n     \n\nconst handleInputChange = async (e) => {\n  const { name, value } = e.target;\n  if (formData[name] !== value) { \n   await setFormData(prevData => ({\n    ...prevData,\n      [name]: value\n    }));\n    console.log( formData);\n    setIsFormChanged(true);\n  }\n}\n    \n    const onSubmit = async (e) => {\n        e.preventDefault();\n        await dispatch(changeShipmentData(formData.id, formData))\n        setIsFormChanged(false);\n  };\n\n\n\n    \n\n  return (\n   <>\n    <form onSubmit={onSubmit}>\n        <h2>Shipment Details</h2>\n          <label htmlFor=\"id\">Order No:</label>\n          <input\n            type=\"text\"\n            id=\"id\"\n            disabled\n            name=\"id\"\n            value={formData.id || \"\"}\n          />  \n          <label htmlFor=\"customer\">Customer:</label>\n          <input\n            type=\"text\"\n            id=\"customer\"\n            name=\"customer\"\n            value={formData.customer || \"\"}\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"trackingNo\">Tracking No:</label>\n          <input\n            type=\"text\"\n            id=\"trackingNo\"\n            name=\"trackingNo\"\n            value={formData.trackingNo || \"\"}\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"consignee\">Consignee:</label>\n          <input\n            type=\"text\"\n            id=\"consignee\"\n            name=\"consignee\"\n            value={formData.consignee || \"\"}\n            onChange={handleInputChange}\n          />\n          <label htmlFor=\"status\">Status:</label>\n          <input\n            type=\"text\"\n            id=\"status\"\n            name=\"status\"\n            value={formData.status || \"\"}\n            onChange={handleInputChange}\n          />\n        <button type=\"submit\" disabled={!isFormChanged}>Submit</button>\n      </form>\n    </>)\n};\n"],"names":["getShipmentByNo","id","axios","data","console","log","message","ShipmentPage","useState","formData","setFormData","isFormChanged","setIsFormChanged","useParams","dispatch","useDispatch","navigate","useNavigate","useEffect","then","handleInputChange","e","target","name","value","prevData","onSubmit","preventDefault","changeShipmentData","htmlFor","type","disabled","customer","onChange","trackingNo","consignee","status"],"sourceRoot":""}